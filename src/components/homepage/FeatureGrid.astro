---
// Define the feature data structure
interface Feature {
  icon: string;
  title: string;
  highlight: string;
  description: string;
}

// Feature data
const features: Feature[] = [
  {
    icon: "framework",
    title: "Support for popular",
    highlight: "frameworks",
    description: "Supports popular frameworks, including React, Vue, Svelte, Astro, Solid, Next.js, Nuxt, Tanstack Start, Hono, and more."
  },
  {
    icon: "authentication",
    title: "Email & Password",
    highlight: "Authentication",
    description: "Built-in support for email and password authentication, with session and account management features."
  },
  {
    icon: "social",
    title: "Support multiple",
    highlight: "OAuth providers",
    description: "Allow users to sign in with their accounts, including GitHub, Google, Discord, Twitter, and more."
  },
  {
    icon: "twofactor",
    title: "Multi Factor",
    highlight: "Authentication",
    description: "Secure your users accounts with two factor authentication with a few lines of code."
  },
  {
    icon: "organization",
    title: "Organization",
    highlight: "Members and Invitation",
    description: "Multi tenant support with members, organization, teams and invitation with access control."
  },
  {
    icon: "plugin",
    title: "A lot more features with",
    highlight: "plugins",
    description: "Improve your application experience with our official plugins and those created by the community."
  }
];

// Icon mapping
const iconMap = {
  framework: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path></svg>`,
  authentication: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="18" height="11" x="3" y="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path></svg>`,
  social: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M22 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>`,
  twofactor: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="8" height="14" x="8" y="5" rx="1"></rect><path d="M4 5h4"></path><path d="M16 5h4"></path><path d="M4 19h4"></path><path d="M16 19h4"></path></svg>`,
  organization: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>`,
  plugin: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2v8"></path><path d="M4.93 10.93 10 16"></path><path d="M2 18h12"></path><path d="M19 18a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"></path></svg>`
};
---

<div class="grid grid-cols-1 md:grid-cols-3 border border-gray-800 relative">
  {features.map((feature, index) => (
    <div class="p-8 border-gray-800 relative">
      <div class="flex items-center gap-2 mb-4">
        <span set:html={iconMap[feature.icon]} />
        <span>{feature.title.split(feature.highlight)[0]}</span>
      </div>
      <h3 class="text-2xl font-bold mb-4">
        {feature.title.split(feature.highlight)[0]}
        <span class="font-bold">{feature.highlight}</span>
        {feature.highlight.endsWith(".") ? "" : "."}
      </h3>
      <p class="text-gray-400 mb-4">
        {feature.description}
      </p>
      <a href="#" class="text-gray-400 hover:text-white">Learn more</a>
      
      <!-- Add plus icons at intersections -->
      {(index === 0 || index === 1 || index === 3 || index === 4) && (
        <div class="absolute right-0 top-1/2 transform translate-x-1/2 -translate-y-1/2 z-10">
          <div class="w-6 h-6 flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600">
              <path d="M5 12h14"></path>
              <path d="M12 5v14"></path>
            </svg>
          </div>
        </div>
      )}
      
      {(index === 0 || index === 1 || index === 2) && (
        <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1/2 z-10">
          <div class="w-6 h-6 flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600">
              <path d="M5 12h14"></path>
              <path d="M12 5v14"></path>
            </svg>
          </div>
        </div>
      )}
    </div>
  ))}
</div>

<style>
  .grid {
    background-color: #000;
    color: #fff;
  }
  
  /* Add borders between cells */
  .grid > div {
    border-right: 1px solid rgb(31, 41, 55); /* border-gray-800 */
    border-bottom: 1px solid rgb(31, 41, 55); /* border-gray-800 */
  }
  
  /* Remove right border from last column */
  .grid > div:nth-child(3n) {
    border-right: none;
  }
  
  /* Remove bottom border from last row */
  .grid > div:nth-child(n+4):nth-child(-n+6) {
    border-bottom: none;
  }
</style>

