export const collectionPageData = [
  {
    name: "patterns",
    heading: "সফটওয়্যার ডিজাইন প্যাটার্ন ",
    title: "Software Design Patterns",
    desc: `সফটওয়্যার ডিজাইন প্যাটার্ন হল পুনরাবৃত্তি সমস্যাগুলোর জন্য প্রমাণিত সমাধানের কাঠামো, যা সফটওয়্যার উন্নয়নের সময় উন্নত ও কার্যকর কোড লিখতে সহায়তা করে। এটি ব্যবহারের মূল কারণ হলো কোডের পুনঃব্যবহারযোগ্যতা, মডিউলারিটি এবং রক্ষণাবেক্ষণ সহজ করা। ডিজাইন প্যাটার্ন জানার সুবিধা হলো এটি সফটওয়্যার আর্কিটেকচার উন্নত করে, ডেভেলপারদের মধ্যে কার্যকর যোগাযোগ তৈরি করে এবং জটিল সমস্যার সমাধান সহজ করে তোলে। Singleton, Factory, Observer, এবং MVC এর মতো জনপ্রিয় ডিজাইন প্যাটার্ন গুলো সফটওয়্যার উন্নয়নে ব্যাপকভাবে ব্যবহৃত হয়।`,
  },
  {
    name: "principles",
    heading: "সফটওয়্যার ইঞ্জিনিয়ারিং  প্রিন্সিপলস ",
    title: "Software Engineering Principles",
    desc: `সফটওয়্যার প্রিন্সিপলস হল কোডের গুণমান ও দক্ষতা বজায় রাখার জন্য কিছু নির্দেশিকা, যা উন্নত, রক্ষণাবেক্ষণযোগ্য ও স্কেলেবল সফটওয়্যার তৈরি করতে সাহায্য করে। এর প্রধান লক্ষ্য হলো জটিলতা কমানো, পুনঃব্যবহারযোগ্যতা বৃদ্ধি করা এবং সহজে বাগ শনাক্ত ও সমাধান করা। SOLID, DRY (Don't Repeat Yourself), KISS (Keep It Simple, Stupid), এবং YAGNI (You Ain’t Gonna Need It) এর মতো জনপ্রিয় সফটওয়্যার প্রিন্সিপলস ডেভেলপারদের ভালো সফটওয়্যার ডিজাইন করতে সহায়তা করে, যা সময় ও খরচ বাঁচায় এবং ভবিষ্যতে সহজে পরিবর্তন করা যায়।`,
  },
];

export const getCollectionPageData = (name: string) => {
  return collectionPageData.find((item) => item.name === name);
};
